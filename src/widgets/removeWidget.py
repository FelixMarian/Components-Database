# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'removeWidget.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QWidget

import assets.res.background_rc
import src.db.dataBase


class Ui_Form(QWidget):

    def __init__(self, parent=None):
        super().__init__(parent)

    def updateModels(self):
        self.model_comboBox.clear()
        selected_type = self.type_comboBox.currentText()
        models = src.db.dataBase.getMatchingModels(selected_type)
        for model in models:
            self.model_comboBox.addItem(model)
        self.model_comboBox.setCurrentText(" ")
        self.code_comboBox.setCurrentText(" ")

    def updateCodes(self):
        self.code_comboBox.clear()
        selected_type = self.type_comboBox.currentText()
        selected_model = self.model_comboBox.currentText()
        codes = src.db.dataBase.getMatchingCodes(selected_type, selected_model)
        for code in codes:
            self.code_comboBox.addItem(code)
        self.code_comboBox.setCurrentText(" ")

    def deleteItem_DB(self):
        selected_type = self.type_comboBox.currentText()
        selected_model = self.model_comboBox.currentText()
        selected_code = self.code_comboBox.currentText()
        src.db.dataBase.removeItemFromDB(selected_type, selected_model, selected_code)
        self.parent().close()

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setFixedSize(400, 271)
        self.backgroundLabel = QtWidgets.QLabel(Form)
        self.backgroundLabel.setGeometry(QtCore.QRect(0, 0, 401, 341))
        self.backgroundLabel.setStyleSheet("QLabel#backgroundLabel{\n"
"background-image: url(:/bg-img/background.png);\n"
"}")
        self.backgroundLabel.setText("")
        self.backgroundLabel.setObjectName("backgroundLabel")

        self.removeLabel = QtWidgets.QLabel(Form)
        self.removeLabel.setGeometry(QtCore.QRect(150, 10, 91, 21))
        self.removeLabel.setStyleSheet("QLabel#removeLabel{\n"
"color: rgba(255,255,255,200);\n"
"font-size: 25px;\n"
"font-family: \"Arial\";\n"
"}")
        self.removeLabel.setObjectName("removeLabel")

        self.model_Label = QtWidgets.QLabel(Form)
        self.model_Label.setGeometry(QtCore.QRect(30, 120, 51, 21))
        self.model_Label.setStyleSheet("QLabel#model_Label{\n"
"color: rgba(255,255,255,225);\n"
"font-size: 18px;\n"
"font-family: \"Arial\";\n"
"}")
        self.model_Label.setObjectName("model_Label")

        self.tip_Label = QtWidgets.QLabel(Form)
        self.tip_Label.setGeometry(QtCore.QRect(40, 70, 41, 21))
        self.tip_Label.setStyleSheet("QLabel#tip_Label{\n"
"color: rgba(255,255,255,225);\n"
"font-size: 18px;\n"
"font-family: \"Arial\";\n"
"}")
        self.tip_Label.setObjectName("tip_Label")

        self.removeConfirm_Button = QtWidgets.QPushButton(Form)
        self.removeConfirm_Button.setGeometry(QtCore.QRect(130, 220, 131, 41))
        self.removeConfirm_Button.setStyleSheet("QPushButton#removeConfirm_Button{\n"
"background-color: rgba(0,0,0,0);\n"
"color: white;\n"
"font-size: 16px;\n"
"font-family: \"Arial\";\n"
"border: 2px solid white;\n"
"border-radius: 13px;\n"
"}\n"
"QPushButton#removeConfirm_Button:hover{\n"
"background-color: rgba(0,0,0,125);\n"
"}")
        self.removeConfirm_Button.setObjectName("removeConfirm_Button")
        # When the button is clicked, the item is deleted from db
        self.removeConfirm_Button.clicked.connect(self.deleteItem_DB)

        self.type_comboBox = QtWidgets.QComboBox(Form)
        self.type_comboBox.setGeometry(QtCore.QRect(110, 61, 221, 31))
        self.type_comboBox.setStyleSheet("QComboBox#type_comboBox{\n"
"background-color: rgba(0,0,0,0);\n"
"border:none;\n"                       
"border-bottom: 2px solid white;\n"
"color:white;\n"
"font-size: 16px;\n"   
"}")
        self.type_comboBox.setObjectName("type_comboBox")
        # Populate the type box with every unique type from db
        typesList = src.db.dataBase.getAllTypes()
        for type in typesList:
            self.type_comboBox.addItem(type)

        self.model_comboBox = QtWidgets.QComboBox(Form)
        self.model_comboBox.setGeometry(QtCore.QRect(110, 110, 221, 31))
        self.model_comboBox.setStyleSheet("QComboBox#model_comboBox{\n"
"background-color: rgba(0,0,0,0);\n"
"border:none;\n"                                        
"border-bottom: 2px solid white;\n"
"color:white;\n"
"font-size: 16px;\n"   
"}")
        self.model_comboBox.setObjectName("model_comboBox")
        # Populate the model box with every model of the selected type from db
        self.type_comboBox.currentIndexChanged.connect(self.updateModels)

        self.code_comboBox = QtWidgets.QComboBox(Form)
        self.code_comboBox.setGeometry(QtCore.QRect(110, 160, 221, 31))
        self.code_comboBox.setStyleSheet("QComboBox#code_comboBox{\n"
"background-color: rgba(0,0,0,0);\n"
"border:none;\n"
"border-bottom: 2px solid white;\n"
"color:white;\n"
"font-size: 16px;\n"   
"}")
        self.code_comboBox.setObjectName("code_comboBox")
        # Populate the code box with every cod of the selected type and model from db
        self.model_comboBox.currentIndexChanged.connect(self.updateCodes)

        self.code_Label = QtWidgets.QLabel(Form)
        self.code_Label.setGeometry(QtCore.QRect(37, 170, 51, 21))
        self.code_Label.setStyleSheet("QLabel#code_Label{\n"
"color: rgba(255,255,255,225);\n"
"font-size: 18px;\n"
"font-family: \"Arial\";\n"
"}")
        self.code_Label.setObjectName("code_Label")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.removeLabel.setText(_translate("Form", "Remove"))
        self.model_Label.setText(_translate("Form", "Model"))
        self.tip_Label.setText(_translate("Form", "Type"))
        self.removeConfirm_Button.setText(_translate("Form", "Remove"))
        self.code_Label.setText(_translate("Form", "Code"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
